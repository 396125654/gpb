%% -*- erlang -*-
{require_otp_vsn, ".*"}.

{pre_hooks,
 [{compile,
   "build/mk_version_hrl"
   "    < include/gpb_version.hrl.in"
   "    > include/gpb_version.hrl "}
 ]}.

%% Erlang compiler options
{erl_opts, [debug_info]}.

{post_hooks,
 [{compile,
   %"sh -exv -c \"" %% use this line for debugging
   "sh -e -c \""
   "test -f descr_src/gpb_descriptor.erl -a"
   "     descr_src/gpb_descriptor.proto -nt descr_src/gpb_descriptor.erl ||"
   "  erl +B -noinput -pa ebin"
   "      -I `pwd`/descr_src -o descr_src"
   "      -s gpb_compile c `pwd`/descr_src/gpb_descriptor.proto;"
   "test -f ebin/gpb_descriptor.beam -a"
   "     descr_src/gpb_descriptor.erl -nt descr_src/gpb_descriptor.beam ||"
   "  erlc -Idescr_src -Iinclude -o `pwd`/ebin +debug_info"
   "       descr_src/gpb_descriptor.erl;"
   "test -f ebin/gpb_compile_descr.beam -a"
   "     descr_src/gpb_compile_descr.erl -nt descr_src/gpb_compile_descr.beam ||"
   "  erlc -Idescr_src -Iinclude -o `pwd`/ebin +debug_info"
   "     descr_src/gpb_compile_descr.erl"
   "\""}]}.

%% XRef checks to perform
{xref_checks, [undefined_function_calls]}.

%% Clean files
{clean_files, [".eunit", "ebin/*.beam", "include/gpb_version.hrl",
               "descr_src/gpb_descriptor.erl", "descr_src/gpb_descriptor.hrl"]}.
